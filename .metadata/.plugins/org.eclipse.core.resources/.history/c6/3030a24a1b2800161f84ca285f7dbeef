package com.aplicacion.parejas.presentacion.controladores;

import java.util.List;

import javax.validation.Valid;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.MediaType;
import org.springframework.http.MediaTypeEditor;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.validation.BindingResult;
import org.springframework.web.bind.annotation.ModelAttribute;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;

import com.aplicacion.parejas.modelo.entidades.Persona;
import com.aplicacion.parejas.modelo.negocio.Servicio;

@Controller
@RequestMapping("/Parejas/")
public class ParejasController {
	@Autowired
	private Servicio servicio;
	
	//Lo normal es que el tipo retornado sea ModelAndView, View o String
	@RequestMapping(value = {"{tipologia}/afines.html"}, produces = {MediaType.APPLICATION_JSON_VALUE}, consumes = {MediaType.APPLICATION_JSON_VALUE})
	//http://localhost:8080/PortalDeParejas/Parejas/pdf/afines.html?id=1
	public String busquedaDeAfines(@PathVariable String tipologia, Integer id, Model model){
		
		List<Persona> afines = servicio.busquedaAfines(id);
		
		model.addAttribute("afines", afines);
		
		switch (tipologia) {
		case "pdf":
			return "pdf/listadoAfines";
		case "excell":
			return "excell/listadoAfines";
		case "json":
			return "json/listadoAfines";
		default:
			return "listadoAfines";
		}
	}
	
	@RequestMapping("ideal.html")
	public String busquedaIdeales(Integer id, Model model) {
		Persona ideal = servicio.busquedaIdeal(id);
		
		model.addAttribute("ideal", ideal);
		
		return "ideal";
	}
	
	@RequestMapping(value="altaPersona.html",method=RequestMethod.GET)
	public String inicializacionFormularioAltaPersonas(Model model){
		
		Persona p = new Persona(null, "", "", null, "Hombre", null);
		
		model.addAttribute("persona", p);
		
		model.addAttribute("listadoSexos", new String[] {"Hombre","Mujer"});
		
		return "formularioAltaPersona";
	}
	
	@RequestMapping(value="altaPersona.html",method=RequestMethod.POST)
	public String procesarFormularioAltaPersonas(@Valid @ModelAttribute("persona") Persona p, BindingResult result , Model model){
		
		if(!result.hasErrors()){
			servicio.altaPersona(p);
			model.addAttribute("estado", "OK");
		}
		
		model.addAttribute("persona", p);
		model.addAttribute("listadoSexos", new String[] {"Hombre","Mujer"});
		
		
		return "formularioAltaPersona";
	}
	
}
